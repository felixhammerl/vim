# JS Snippets

snippet prom "Promise"
new Promise((resolve, reject) => {
  ${1}
})
endsnippet

snippet fun "Arrow Function"
(${1}) => {${2}}
endsnippet

snippet func "Function"
function $1 (${2}) {${3}}
endsnippet

snippet proto "Prototype Method"
${1:Class}.prototype.${2:Method} = function(${3:Argument}) {${4}}
endsnippet

snippet mba "Mocha Before All"
before(() => {})
endsnippet

snippet mbe "Mocha Before Each"
beforeEach(() => {})
endsnippet

snippet mae "Mocha After Each"
afterEach(() => {})
endsnippet

snippet maa "Mocha After All"
after(() => {})
endsnippet

snippet mts "Mocha Test"
describe('${1:[Method Name]}', () => {
	${2:[Test Cases]}
})
endsnippet

snippet mtc "Mocha Test Case"
it('should ${1:[Behavior]}', () => {
  $2
})
endsnippet

snippet ceq "Chai Equal"
expect(${1}).to.${2:deep.}equal(${3})
endsnippet

snippet cbo "Chai Bool"
expect(${1}).to.be.${2}
endsnippet

snippet cex "Chai Exist"
expect(${1}).to.${2:not.}exist
endsnippet

snippet cem "Chai Empty"
expect(${1}).to.${2:not.}be.empty
endsnippet

snippet cco "Chai Contain"
expect(${1}).to.${2:not.}contain(${3})
endsnippet

snippet sinon-stub-method "Sinon Stub Method"
sinon.stub(${2:[Object]}, '${3:[Method]}')
${2:[Object]}.${3:[Method]}.restore()
endsnippet



